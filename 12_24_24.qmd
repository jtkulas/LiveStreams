---
title: "R for <br>Authoring!!" 
author: "OOH Session #57...<br>[...Season's Greetings!!]{.ballet} (cards)" 
title-slide-attributes: 
  data-background-image: https://i.ytimg.com/vi/hOHW8uX1QwQ/hq720.jpg?sqp=-oaymwEhCK4FEIIDSFryq4qpAxMIARUAAAAAGAElAADIQj0AgKJD&rs=AOn4CLB06XtSYdgxgtkIP0u0-iWPkFBntg 
  data-background-opacity: ".4"
format:
  revealjs:
    mouse-wheel: true                ## yes enables mouse
    slide-tone: false
#    navigation-mode: vertical
    transition: convex
    transition-speed: slow
#    controls-layout: bottom-right
#    controls-tutorial: true
#    slide-number: h.v
    mermaid:
      theme: forest
#    output-location: slide           ## column-fragment; inserts blank 2nd slide
    code-overflow: wrap              ## instead of horizontal scroll
    theme: [league, weekly.scss]       ## night & league
    logo: "erg2.png"
    footer-logo-link: "https://ergreports.com/"  ## https://github.com/shafayetShafee/reveal-header#readme
    preview-links: false             ## true brings up iframe window instead of "site"
    code-annotations: hover 
    html-math-method: 
      method: mathjax        ## LaTeX in code annotations
      url: "https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.9/latest.js?config=TeX-MML-AM_CHTML"
engine: knitr                        ## not picking up inline codes
bibliography: temp.bib
#lightbox: true
filters: 
  - reveal-header          ## extension to add a hyperlink to slide logo
---

```{r, warning=FALSE, message=FALSE}
#devtools::install_github("hadley/emo")        ## if anyone else wants to render
library(fontawesome)
```

## Open Office Hours <br>(`r format(Sys.Date(),"%B %d, %Y")`)

::: {layout="[80,20]"}
::: first-column
-   Recap session #56&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;`r emo::ji("left_right_arrow")`
-   Focal issue(s):
    - [Season's Greetings]{.ballet}<br>(cards)
-   Shared problem-solving
:::

::: second-column
:::

:::

![](img/title56.JPG){.absolute top="170" right="-120" width="600" height="325"}

# Recap of Session <br>#56: 

![](https://pngimg.com/d/sticky_note_PNG18964.png){.absolute right="50" top="200"}
![](https://www.pngall.com/wp-content/uploads/14/Tinkerbell-PNG.png){.absolute width="150" top="270" right="160" .mirror}

## [surveydown](https://surveydown.org/) Part VI -- [Tinkering]{.tinkerbell2}:

:::: {.columns}
::: {.column width="15%"}
:::

::: {.column width="85%"}
:::: {.panel-tabset}

## app.R 

```{r}
#| eval: false
#| echo: true
#| code-line-numbers: "14-20"

# remotes::install_github("surveydown-dev/surveydown", force = TRUE)
library(surveydown)

# Database setup

# surveydown stores data on a database that you define at https://supabase.com/
# To connect to a database, update the sd_database() function with details
# from your supabase database. For this demo, we set ignore = TRUE, which will
# ignore the settings and won't attempt to connect to the database. This is
# helpful for local testing if you don't want to record testing data in the
# database table. See the documentation for details:
# https://surveydown.org/store-data

db <- sd_database(
  host   = "aws-0-us-west-1.pooler.supabase.com",     
  dbname = "postgres",
  port   = "6543",
  user   = "postgres.yppmohklyshsiwkpadqa",           
  table  = "Woody",                                   #<1>
#  ignore = TRUE                                     
)


# Server setup
server <- function(input, output, session) {

  # Define any conditional skip logic here (skip to page if a condition is true)
  sd_skip_if()

  # Define any conditional display logic here (show a question if a condition is true)
  sd_show_if()

  # Database designation and other settings
  sd_server(
    db = db
  )

}

# shinyApp() initiates your app - don't change it
shiny::shinyApp(ui = sd_ui(), server = server)




# viola
```
1. The name you choose here will appear as a database table on the Supabase site -- data itself is exportable as .csv or .sql.

## Survey

[![](img/survey1.JPG)](https://jtkulas.shinyapps.io/Kulas/)

## Supabase

[![](img/survey2.JPG)](https://surveydown.org/store-data#create-a-supabase-account)

## Data
```{r}
#| echo: true
#| output-location: column

data <- read.csv("Woody.csv")

descr::freq(data$einstein)


```


::::

:::
::::

![](https://www.disneyclips.com/images/images/tinkerbell29.png){.absolute width="250" bottom="50" left="-150"}

# Today...

![](https://pngimg.com/d/santa_sleigh_PNG15.png){.nostretch fig-align="right" width="800px"}

## [S]{.ballet}[eason's]{.ballet3} [G]{.ballet}[reetings]{.ballet3} (cards)

![](https://cdn11.bigcommerce.com/s-gki9t8g2p/images/stencil/1280x1280/products/12540/28650/NLSVX001__90676.1730923959.jpg?c=2?imbypass=on){.absolute width="400" left="320" bottom="0"}

![](https://i.pinimg.com/736x/9a/5c/6f/9a5c6ff49fba2221653983ade79788b8.jpg){.absolute width="300" left="-70" bottom="100" .tilt}

![](https://www.warnerpress.org/media/catalog/product/cache/52a1499fffa046429a9b5055fe9a2d86/g/9/g9394xd_web.jpg){.absolute width="300" right="-40" bottom="100" .tilt2}

## `r fontawesome::fa("r-project", fill="#4287f5")` Session Info (`r format(Sys.Date(),"%B %d, %Y")`) Rendering:

```{r}
sessionInfo()
```


