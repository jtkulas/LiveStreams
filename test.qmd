---
title: "Untitled"
format: 
  dashboard:
    orientation: rows
    nav-buttons: 
      - github
    theme: solar
    logo: kiddo.jpg
server: shiny
---

# heya {.sidebar}

Diego and Ian are here. Level one heading means this sidebar is available on every page of the dashboard. `{.toolbar}` makes a horizontal "sidebar"

# not everything in sidebar

## firstlevel 

```{r}
library(plotly)

data <- read.csv("https://raw.githubusercontent.com/plotly/datasets/master/school_earnings.csv")


library(psych)
data(bfi)

bfi$jibberish <- rowMeans(bfi[1:10], na.rm=TRUE)
bfi$gobbleyjook <- rowMeans(bfi[11:20], na.rm=TRUE)

plot_ly(bfi, x = ~jibberish, y = ~gobbleyjook, text = ~age, type = 'scatter', mode = 'markers', color=~gender,
        marker = list(size = ~age, opacity = 0.5))

```

# Diamonds Explorer

```{r}
#| context: setup
library(ggplot2)
library(psych)

data(bfi)

bfi$jibberish <- rowMeans(bfi[1:10], na.rm=TRUE)
bfi$gobbleyjook <- rowMeans(bfi[11:20], na.rm=TRUE)

bfi$education <- as.factor(as.character(bfi$education))

dataset <- bfi

```

## {.sidebar}

```{r}
sliderInput('sampleSize', 'Sample Size', 
            min=0, max=nrow(dataset),
            value=min(1000, nrow(dataset)), 
            step=500, round=0)
br()
checkboxInput('jitter', 'Jitter')
checkboxInput('smooth', 'Smooth')
```

```{r, eval=TRUE}
selectInput('x', 'X', names(dataset)) 
selectInput('y', 'Y', names(dataset), names(dataset)[[2]])
selectInput('color', 'Color', c('None', names(dataset)))
```

```{r}
selectInput('facet_row', 'Facet Row',
  c(None='.', names(bfi[sapply(bfi, is.factor)])))
selectInput('facet_col', 'Facet Column',
  c(None='.', names(bfi[sapply(bfi, is.factor)])))
```

```{r}

downloadLink(outputId = "report", label = "Generate Report:", icon=shiny::icon("download"))

```


## Plot

```{r}
plotOutput('plot')
```

```{r}
#| context: server

dataset <- reactive({
  bfi[sample(nrow(bfi), input$sampleSize),]
})
 
output$plot <- renderPlot({
  
  p <- ggplot(
    dataset(), 
    aes_string(x=input$x, y=input$y)) + geom_point()
  
  if (input$color != 'None')
    p <- p + aes_string(color=input$color)
  
  facets <- paste(input$facet_row, '~', input$facet_col)
  if (facets != '. ~ .')
    p <- p + facet_grid(facets)
  
  if (input$jitter)
    p <- p + geom_jitter(width=.8, height=.8)
  if (input$smooth)
    p <- p + geom_smooth()
  
  p
  
})

output$downFile <- downloadHandler(
  filename = "Reprod_ex.html") 

```

# another one

:::{.card}
heya there's `r nrow(diamonds)` jewels in here!!!
:::