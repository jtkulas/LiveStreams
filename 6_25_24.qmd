---
title: "R for <br>Authoring!!" 
author: "PSP Session #31...<br>...return of the APA"
title-slide-attributes: 
  data-background-image: https://kidsthinkwide.com/wp-content/uploads/2023/05/0139-1024x574.png #https://img.freepik.com/premium-photo/anthropomorphic-gorilla-reading-book-library_593195-5935.jpg
  data-background-opacity: ".4"
format:
  revealjs:
#    output-location: slide           ## column-fragment; inserts blank 2nd slide
    code-overflow: wrap              ## instead of horizontal scroll
    theme: [night, weekly.scss]
    logo: "erg2.png"
    transition: slide
    background-transition: fade
    mouse-wheel: true                ## yes enables mouse
    preview-links: false             ## true brings up iframe window instead of "site"
    code-annotations: hover 
    html-math-method: 
      method: mathjax        ## LaTeX in code annotations
      url: "https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.9/latest.js?config=TeX-MML-AM_CHTML"
engine: knitr                        ## not picking up inline codes
# bibliography: r-references.bib
---

```{r, warning=FALSE, message=FALSE}
#devtools::install_github("hadley/emo")        ## if anyone else wants to render
library(fontawesome)
```

## Problem-Solving Panel <br>(`r format(Sys.Date(),"%B %d, %Y")`)

::: {layout="[80,20]"}
::: first-column
-   Recap session #30&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;`r emo::ji("left_right_arrow")`
-   Focal issue:
    - APA [Quarto extension](https://quarto.org/docs/extensions/) `r emo::ji("monkey")`
-   Shared problem-solving
:::

::: second-column
:::
:::

![](img/title30.JPG){.absolute top="170" right="-120" width="550" height="325"}

![](https://static.vecteezy.com/system/resources/previews/035/982/836/original/ai-generated-monkey-isolated-on-transparent-background-free-png.png){.absolute left="250" bottom="-50" width="300"}

# Recap of Session #30: 

## [Shiny]{.shiny}`r emo::ji("sparkles")` `r fa("download",fill="#0077b5")`'s 

:::: {.columns}
::: {.column width="25%"}
+ Data `r fa("check",fill="#228B22")`
+ Figure `r fa("check",fill="#228B22")`
+ `r fontawesome::fa("file-pdf", fill="#C70039")` Report `r fa("check",fill="#228B22")`
+ Quarto `r emo::ji("eyes")`

:::

::: {.column width="75%"}

::: {.panel-tabset}

## App script `r emo::ji("writing_hand")`

```{r}
#| eval: false
#| echo: true
#| code-line-numbers: "13-16,25-30,33-48,61-65"

library(shiny)
library(rmarkdown)
library(ggplot2)

data <- data.frame(
  ID = 1:10,
  Name = c("John", "Paul", "George", "Ringo", "Mick", 
           "Keith", "Charlie", "Ronnie", "Roger", "Pete"),
  Age = c(40, 42, 38, 41, 43, 45, 39, 40, 44, 42)
)

server <- function(input, output) {
  filtered_data <- reactive({                       #<1>
    data[data$Age >= input$ageRange[1] & 
           data$Age <= input$ageRange[2], ]
  })                                                #<1>
  
  output$distPlot <- renderPlot({
    ggplot(filtered_data(),aes(x=Age)) + 
      geom_histogram()
  })
  
  output$downloadReport <- downloadHandler(
    filename = function() {
      paste('my-report', sep = '.', switch(          #<2>
        input$format, PDF = 'pdf', 
                      HTML = 'html', 
                      Word = 'docx'
      ))
    },                                               #<2>
    
    content = function(file) {                       
      src <- normalizePath('child_script.Rmd')       #<3>
      owd <- setwd(tempdir())
      on.exit(setwd(owd))
      file.copy(src, 'child_script.Rmd', 
                overwrite = TRUE)
      
     out <- rmarkdown::render('child_script.Rmd',
       params = list(text = input$text, 
                     outp=input$Try, 
                     age=input$ageRange),
       switch(input$format,
            PDF = pdf_document(), 
            HTML = html_document(), 
            Word = word_document()
                               ))
      file.rename(out, file)                        #<3>
    }
  )
}

ui <- fluidPage(
  tags$textarea(id="text", rows=10, cols=15, 
            placeholder="Some placeholder text"),
  
  flowLayout(sliderInput('ageRange', 'Age Range', 
                         min = 30, 
                         max = 45, 
                         value = c(30, 45)),
             plotOutput("distPlot"),                 #<4>
             radioButtons('format',                  
                'Document format', 
                c('HTML', 'Word','PDF'),
                    inline = FALSE),                 #<4>
             checkboxGroupInput(
    "Try","Let's hope this works",
    choiceNames = list("include hi",
                       "include hey",
                       "include hello",
                       "include how are you"),
    choiceValues = list("HI",
                        "HEY",
                        "HELLO",
                        "HOW ARE YOU")),
             downloadButton('downloadReport'))
)

shinyApp(ui = ui, server = server)
```
1. Most interactive functionality currently dependent on this `filtered_data` object (dataframe)
2. Rendered report name and proper file extension (.html, .pdf, or .docx)
3. Locates and renders "child" .Rmd report template -- parameters also identified here
4. Our two elements of most immediate interest (in addition to the `downloadReport` button on line #76)

## .Rmd specs `r emo::ji("bookmark_tabs")`

```{r}
#| eval: false
#| echo: true
#| code-line-numbers: "3,5-7,20,25"
---
title: "Testing with Diego"
output: html_document                                             #<1>
params:
  text: 'NULL'                                                    #<2>
  outp: 'NULL'
  age: 'NULL'                                                     #<2>
---

# Fiddling around

`r params[["text"]]`
`r params[["outp"]]`

the selected age range is `r params[["age"]]`

``{r, warning=FALSE, echo=FALSE, message=FALSE}
library(ggplot2)

ggplot(filtered_data(),aes(x=Age)) +                           #<3>
  geom_histogram()                                             #<3>
``

the picture above is reflecting ages from 
`r nrow(filtered_data())` British rockers.                     #<3>
```

1. Default output type for report -- UI has check-box options to override this default
2. One way to "call in" values from dynamic reactive app elements 
3. `dataname()` convention used with reactive dataframes
:::
:::
::::

# Today: 

## [$\Psi$ APA](https://wjschne.github.io/apaquarto/) Quarto Extension `r emo::ji("see_no_evil_monkey")`

![](https://www.bibme.org/wp-content/uploads/2020/03/BibMe-APA-format-student-title-page.png){.absolute left="-230"}
![](https://www.citationmachine.net/wp-content/uploads/2020/03/APA-7-format-table.png){.absolute right="-230"}

## `r fontawesome::fa("r-project", fill="#4287f5")` Session Info (`r format(Sys.Date(),"%B %d, %Y")`) Rendering:

```{r}
sessionInfo()
```


