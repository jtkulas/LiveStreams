---
title: "R for <br>Authoring!!" 
author: "PSP Session #16...<br>[...now even more<br> Shinier]{.kulascol3}"
title-slide-attributes: 
  data-background-image: https://www.usatoday.com/gcdn/presto/2021/07/06/USAT/a2b942d5-92aa-4d0a-8ba6-81e92ba879bb-RamilFhero.jpg
#  data-background-opacity: ".7"
format:
  revealjs:
    code-overflow: wrap              ## instead of horizontal scroll
    theme: [night, weekly.scss]
    logo: "erg2.png"
    transition: slide
    background-transition: fade
    mouse-wheel: true                ## yes enables mouse
    preview-links: false             ## true brings up iframe window instead of "site"
    code-annotations: hover 
engine: knitr                        ## not picking up inline codes
---

```{r, warning=FALSE, message=FALSE}
devtools::install_github("hadley/emo")
```

## Problem-Solving Panel <br>(`r format(Sys.Date(),"%B %d, %Y")`)

::: {layout="[80,20]"}
::: first-column
-   Recap session #15&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;`r emo::ji("left_right_arrow")`
-   Focal issue(s):
    -   Short-term:
        - `r emo::ji("sparkles")`[shiny](https://shiny.posit.co/r/articles/start/cheatsheet/)`r emo::ji("sparkles")` dashboards 
    -   Long-term:
        -   dissertation template `r emo::ji("graduation_cap")`
-   Shared problem-solving
:::

::: second-column
:::
:::

![](img/title15.JPG){.absolute top="170" right="-120" width="550" height="325"}

# Recap of Session #15: 

## Dashboards (Part III) `r emo::ji("coder")``r emo::ji("coder")``r emo::ji("coder")`

::: panel-tabset

### `plotly` Dashboard

```{r}
#| echo: false
#| layout-ncol: 2

library(plotly)

library(psych)
data(bfi)

bfi$jibberish <- rowMeans(bfi[1:10], na.rm=TRUE)
bfi$gobbleyjook <- rowMeans(bfi[11:20], na.rm=TRUE)

plot_ly(bfi, x = ~jibberish, y = ~gobbleyjook, text = ~age, type = 'scatter', mode = 'markers', color=~gender,
        marker = list(size = ~age, opacity = 0.5))

bfi$gender <- as.factor(as.character(bfi$gender))

plot_ly(bfi, x = ~jibberish, y = ~gobbleyjook, text = ~age, type = 'scatter', mode = 'markers', color=~gender,
        marker = list(size = ~age, opacity = 0.5))

```

### Porting to `shiny`

:::: {.columns}
::: {.column width="40%"}
```{r}
#| eval: false
#| echo: true
#| code-line-numbers: "10"

---
title: "Untitled"
format: 
  dashboard:
    orientation: rows
    nav-buttons: 
      - github
    theme: solar
    logo: kiddo.jpg
server: shiny                              # <1>
---
```
1. only `YAML` addition to standard Quarto dashboard specs.
:::

::: {.column width="60%"}

```{r}
#| eval: false
#| echo: true
#| code-line-numbers: "4"

## heya {.sidebar}

sampleSize <- NULL
sliderInput('sampleSize', 'Sample Size',        # <2>
            min=0, max=nrow(bfi),
            value=min(1000, nrow(bfi)), 
            step=100, round=0)
```
2. one slider input taken from [`Diamonds Explorer`](https://quarto.org/docs/dashboards/interactivity/shiny-r.html#walkthrough) example.

:::
::::
:::

# Today: 

## `r emo::ji("sparkles")``r emo::ji("sparkles")` `shiny` integration `r emo::ji("sparkles")``r emo::ji("sparkles")`

:::: {layout="[30,70]"}

::: calloutspace

Get some sliders in there

:::

::: plot

```{r}
#| echo: false

library(plotly)

library(psych)
data(bfi)

bfi$jibberish <- rowMeans(bfi[1:10], na.rm=TRUE)
bfi$gobbleyjook <- rowMeans(bfi[11:20], na.rm=TRUE)

bfi$gender <- as.factor(as.character(bfi$gender))

plot_ly(bfi, x = ~jibberish, y = ~gobbleyjook, text = ~age, type = 'scatter', mode = 'markers', color=~gender,
        marker = list(size = ~age, opacity = 0.5))

```
:::

::::

::: {.fragment}
![](https://seeklogo.com/images/W/white-castle-logo-CD79E34B20-seeklogo.com.png){.absolute bottom="200" left="-30"}
:::

::: {.fragment}
![](https://images.vexels.com/media/users/3/143047/isolated/preview/b0c9678466af11dd45a62163bdcf03fe-fast-food-hamburger-flat-icon.png){.absolute height="400" bottom="-50" left="0"}

:::

## Dissertation <br>formatting `r emo::ji("graduation_cap")`:


:::: {layout="[45,55]"}

::: listing

1. Work zone: `r emo::ji("construction")`
    + Get front matter <br>into .cls

::: {.callout-tip}
## $\LaTeX$ resource:

.cls & .sty file specifications for noobs located [here](https://latex-ninja.com/2020/03/25/your-first-time-tweaking-a-cls-file-on-the-example-of-creating-switchable-colour-themes/)
:::
    
:::

::: next

:::

::::
    
![](https://i.pinimg.com/474x/15/44/60/1544604a568b8cdcfd55f9ecd6271cdb.jpg){.absolute right="-70" bottom="0" height="700"}

## `r fontawesome::fa("r-project", fill="#4287f5")` Session Info (`r format(Sys.Date(),"%B %d, %Y")`) Rendering:

```{r}
sessionInfo()
```