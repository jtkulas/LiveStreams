---
title: "calder"
format: html
---

```{r}
#| echo: false
#| warning: false

library(threejs)
data(LeMis)
N  <- length(V(LeMis))

# Vertex page rank values
pr <- page_rank(LeMis)$vector
# order the page rank values
i <- order(pr, decreasing=TRUE)

# Vertex cluster membership
cl <- unclass(membership(cluster_louvain(LeMis)))

# Find the index of the highest page rank vertex in each cluster
idx <- aggregate(seq(1:N)[i], by=list(cl[i]), FUN=head, 1)$x
# Create a default force-directed layout for the whole network
l1 <- norm_coords(layout_with_fr(LeMis, dim=3))
# Collapse the layout to just the idx vertices
l0 <- Reduce(rbind,Map(function(i) l1[idx[i],], cl))

# Grouped vertex colors, setting all but idx vertices transparent
col <- rainbow(length(idx), alpha=0)[cl]
col[idx] <- rainbow(length(idx), alpha=1)

click <- Map(function(i)
{
  x <- l0
  x[cl == i, ] <- l1[cl == i, ]
  c <- col
  c[cl == i] <- rainbow(length(idx), alpha=1)[i]
  list(layout=x, vertex.color=c)
}, seq(idx))
names(click) <- paste(idx)

calder <- graphjs(LeMis, layout=l0, click=click, vertex.color=col, fps=20, font.main="78px Arial")

graph <- htmlwidgets::createWidget(
  "sigma", 
  calder,
  width=5,
    height=5
)

graph

```

```{r}
#| echo: false
#| warning: false
#| eval: false

library(leaflet)
library(tidyverse)
# Coordinates of the centre point of the UK: Whitendale Hanging Stones
whitendale = c(-2.547855, 54.00366)

leaflet() %>%
  # Centre map on Whitendale Hanging Stones
  setView(lng = whitendale[1], lat = whitendale[2], zoom = 6) %>% 
  # Add OSM basemap
  addProviderTiles(providers$OpenStreetMap, group = "Open Street Map") %>% 
  # Add additional basemap layers
  addProviderTiles(providers$Esri.WorldImagery, group = "ESRI World Imagery") %>% 
  addProviderTiles(providers$Esri.WorldTerrain, group = "ESRI World Terrain") %>% 
  # Add a User-Interface (UI) control to switch layers
  addLayersControl(
    baseGroups = c("Open Street Map","ESRI World Imagery","ESRI World Terrain"),
    options = layersControlOptions(collapsed = FALSE)
    )
```
