---
title: "R for <br>Authoring!!" 
author: "PSP Session #27...<br>[...Shiny]{.shiny} on the Down Low(d)"
title-slide-attributes: 
  data-background-image: https://media.istockphoto.com/id/693210524/vector/pop-art-style-comics-panel-gossip-girl-whispering-secret-in-ear-word-of-mouth-vector.jpg?s=612x612&w=0&k=20&c=4YeSgU2oo9qW6tObPktTy_bW0L8RZKRw4X7B3YPi5pk=
  data-background-opacity: ".4"
format:
  revealjs:
    output-location: slide           ## column-fragment
    code-overflow: wrap              ## instead of horizontal scroll
    theme: [night, weekly.scss]
    logo: "erg2.png"
    transition: slide
    background-transition: fade
    mouse-wheel: true                ## yes enables mouse
    preview-links: false             ## true brings up iframe window instead of "site"
    code-annotations: hover 
    html-math-method: 
      method: mathjax        ## LaTeX in code annotations
      url: "https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.9/latest.js?config=TeX-MML-AM_CHTML"
engine: knitr                        ## not picking up inline codes
# bibliography: r-references.bib
---

```{r, warning=FALSE, message=FALSE}
#devtools::install_github("hadley/emo")        ## if anyone else wants to render
library(fontawesome)
```

## Problem-Solving Panel <br>(`r format(Sys.Date(),"%B %d, %Y")`)

::: {layout="[80,20]"}
::: first-column
-   Recap session #26&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;`r emo::ji("left_right_arrow")`
-   Focal issue:
    - [Shiny]{.shiny} downloads
      - Figures & Graphs `r emo::ji("chart_increasing")`
-   Shared problem-solving
:::

::: second-column
:::
:::

![](img/title26.JPG){.absolute top="170" right="-120" width="550" height="325"}

# Recap of Session #26: 

## Data `r fa("download",fill="#0077b5")` from [Shiny]{.shiny} 

```{r, echo=TRUE}
library(shiny)
library(DT)

# Sample dataset
data <- data.frame(                                         #<1>
  ID = 1:10,                                                #<1>
  Name = c("John", "Paul", "George", "Ringo",               #<1>
           "Mick", "Keith", "Charlie", "Ronnie", "Roger",   #<1>
           "Pete"),                                         #<1>
  Age = c(40, 42, 38, 41, 43, 45, 39, 40, 44, 42)           #<1>
)                                                           #<1>

# Define UI
ui <- fluidPage(                                            
  titlePanel("Download CSV Example"),                       #<2>
  fluidRow(
    sidebarPanel(
      sliderInput('ageRange', 'Age Range', 
                  min = 30,                                 #<3>
                  max = 45,                                 #<3>
                  value = c(30, 40))                        #<4>
    ),
    mainPanel(
      DTOutput("table"),                                    #<5>
      downloadButton("downloadData", "Download CSV")        #<6>
    )
  )
)

# Define server logic
server <- function(input, output) {
  # Reactive expression to filter data based on age range
  filtered_data <- reactive({                              #<7>
    data[data$Age >= input$ageRange[1] & data$Age <= input$ageRange[2], ]                                       #<7>
  })                                                       #<7>
  
  # Display the table
  output$table <- renderDT({
    filtered_data()
  })
  
  # Download handler
  output$downloadData <- downloadHandler(                  #<8>
    filename = function() {
      paste("data-", Sys.Date(), ".csv", sep = "")
    },
    content = function(file) {
      write.csv(filtered_data(), file, row.names = FALSE)  
    }
  )                                                        #<8>
}

# Run the app
shinyApp(ui = ui, server = server)
```
1. Creating a small dataframe
2. Title of app (see next slide)
3. Max and minimum scale input values
4. "Starting" points for slider scale
5. Table to be displayed (from DT package)
6. Download button with "Download CSV" label
7. Filter applied creating new data object, `filtered_data`. `$ageRange` is defined above in `ui` object.
8. `downloadHandler` in combination with `write.csv` most instructive here

# Today: 

## Reactive `r fa("download",fill="#0077b5")`'s from [Shiny]{.shiny}`r emo::ji("sparkles")`

:::: {.columns}
::: {.column width="25%"}
+ Data `r fa("check",fill="#228B22")`
+ [Figure](https://mastering-shiny.org/action-transfer.html) `r fa("circle-xmark",fill="#D22B2B")`
+ Report `r fa("circle-xmark",fill="#D22B2B")`
<br>
<br>
+ Quarto `r emo::ji("eyes")`

:::

::: {.column width="75%"}
![](https://tilburgsciencehub.com/topics/visualization/data-visualization/dashboarding/images/demo_app.png){.absolute height="500"}
:::
::::

## `r fontawesome::fa("r-project", fill="#4287f5")` Session Info (`r format(Sys.Date(),"%B %d, %Y")`) Rendering:

```{r}
sessionInfo()
```

